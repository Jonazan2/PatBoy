#ifndef TYPES_H_
#define TYPES_H_

typedef unsigned char byte;
typedef unsigned short word;

typedef union {
    struct {
        byte low;
        byte hi;
    };
    word value;
} Register;

enum Interrupts {
    VBLANK = 0x00,
    LCD = 0x01,
    TIMER = 0x02,
	SERIAL = 0x03,
    JOYPAD = 0x04
};

enum Flag {
    ZERO_FLAG = 7,
    ADD_SUB_FLAG = 6,
    HALF_CARRY_FLAG = 5,
    CARRY_FLAG = 4
};

struct RGB {
    byte red;
    byte green;
    byte blue;

	bool isEqual(RGB other) const {
		return red == other.red && green == other.green && blue == other.blue;
	}
};

enum TMA_CYCLES {
    TMA_4096 = 1024,
    TMA_16384 = 256,
    TMA_65536 = 64,
    TMA_262144 = 16
};

const byte SPECIAL_OPCODE = 0xCB;
const word DIV_REGISTER = 0xFF04;
const word TIMA = 0xFF05;
const word TMA = 0xFF06;
const word TAC = 0xFF07;
const word IE_REGISTER = 0xFFFF;
const word IF_REGISTER = 0xFF0F;

const byte initialValuesForFFXX[256] = {
    0xCF, 0x00, 0x7E, 0xFF, 0xD3, 0x00, 0x00, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE1,
    0x80, 0xBF, 0xF3, 0xFF, 0xBF, 0xFF, 0x3F, 0x00, 0xFF, 0xBF, 0x7F, 0xFF, 0x9F, 0xFF, 0xBF, 0xFF,
    0xFF, 0x00, 0x00, 0xBF, 0x77, 0xF3, 0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0x71, 0x72, 0xD5, 0x91, 0x58, 0xBB, 0x2A, 0xFA, 0xCF, 0x3C, 0x54, 0x75, 0x48, 0xCF, 0x8F, 0xD9,
    0x91, 0x80, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFC, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0x2B, 0x0B, 0x64, 0x2F, 0xAF, 0x15, 0x60, 0x6D, 0x61, 0x4E, 0xAC, 0x45, 0x0F, 0xDA, 0x92, 0xF3,
    0x83, 0x38, 0xE4, 0x4E, 0xA7, 0x6C, 0x38, 0x58, 0xBE, 0xEA, 0xE5, 0x81, 0xB4, 0xCB, 0xBF, 0x7B,
    0x59, 0xAD, 0x50, 0x13, 0x5E, 0xF6, 0xB3, 0xC1, 0xDC, 0xDF, 0x9E, 0x68, 0xD7, 0x59, 0x26, 0xF3,
    0x62, 0x54, 0xF8, 0x36, 0xB7, 0x78, 0x6A, 0x22, 0xA7, 0xDD, 0x88, 0x15, 0xCA, 0x96, 0x39, 0xD3,
    0xE6, 0x55, 0x6E, 0xEA, 0x90, 0x76, 0xB8, 0xFF, 0x50, 0xCD, 0xB5, 0x1B, 0x1F, 0xA5, 0x4D, 0x2E,
    0xB4, 0x09, 0x47, 0x8A, 0xC4, 0x5A, 0x8C, 0x4E, 0xE7, 0x29, 0x50, 0x88, 0xA8, 0x66, 0x85, 0x4B,
    0xAA, 0x38, 0xE7, 0x6B, 0x45, 0x3E, 0x30, 0x37, 0xBA, 0xC5, 0x31, 0xF2, 0x71, 0xB4, 0xCF, 0x29,
    0xBC, 0x7F, 0x7E, 0xD0, 0xC7, 0xC3, 0xBD, 0xCF, 0x59, 0xEA, 0x39, 0x01, 0x2E, 0x00, 0x69, 0x00
};

const byte nintendoTitle[256] = {
    0x31, 0xFE, 0xFF, 0xAF, 0x21, 0xFF, 0x9F, 0x32, 0xCB, 0x7C, 0x20, 0xFB, 0x21, 0x26, 0xFF, 0x0E,
    0x11, 0x3E, 0x80, 0x32, 0xE2, 0x0C, 0x3E, 0xF3, 0xE2, 0x32, 0x3E, 0x77, 0x77, 0x3E, 0xFC, 0xE0,
    0x47, 0x11, 0x04, 0x01, 0x21, 0x10, 0x80, 0x1A, 0xCD, 0x95, 0x00, 0xCD, 0x96, 0x00, 0x13, 0x7B,
    0xFE, 0x34, 0x20, 0xF3, 0x11, 0xD8, 0x00, 0x06, 0x08, 0x1A, 0x13, 0x22, 0x23, 0x05, 0x20, 0xF9,
    0x3E, 0x19, 0xEA, 0x10, 0x99, 0x21, 0x2F, 0x99, 0x0E, 0x0C, 0x3D, 0x28, 0x08, 0x32, 0x0D, 0x20,
    0xF9, 0x2E, 0x0F, 0x18, 0xF3, 0x67, 0x3E, 0x64, 0x57, 0xE0, 0x42, 0x3E, 0x91, 0xE0, 0x40, 0x04,
    0x1E, 0x02, 0x0E, 0x0C, 0xF0, 0x44, 0xFE, 0x90, 0x20, 0xFA, 0x0D, 0x20, 0xF7, 0x1D, 0x20, 0xF2,
    0x0E, 0x13, 0x24, 0x7C, 0x1E, 0x83, 0xFE, 0x62, 0x28, 0x06, 0x1E, 0xC1, 0xFE, 0x64, 0x20, 0x06,
    0x7B, 0xE2, 0x0C, 0x3E, 0x87, 0xE2, 0xF0, 0x42, 0x90, 0xE0, 0x42, 0x15, 0x20, 0xD2, 0x05, 0x20,
    0x4F, 0x16, 0x20, 0x18, 0xCB, 0x4F, 0x06, 0x04, 0xC5, 0xCB, 0x11, 0x17, 0xC1, 0xCB, 0x11, 0x17,
    0x05, 0x20, 0xF5, 0x22, 0x23, 0x22, 0x23, 0xC9, 0xCE, 0xED, 0x66, 0x66, 0xCC, 0x0D, 0x00, 0x0B,
    0x03, 0x73, 0x00, 0x83, 0x00, 0x0C, 0x00, 0x0D, 0x00, 0x08, 0x11, 0x1F, 0x88, 0x89, 0x00, 0x0E,
    0xDC, 0xCC, 0x6E, 0xE6, 0xDD, 0xDD, 0xD9, 0x99, 0xBB, 0xBB, 0x67, 0x63, 0x6E, 0x0E, 0xEC, 0xCC,
    0xDD, 0xDC, 0x99, 0x9F, 0xBB, 0xB9, 0x33, 0x3E, 0x3C, 0x42, 0xB9, 0xA5, 0xB9, 0xA5, 0x42, 0x3C,
    0x21, 0x04, 0x01, 0x11, 0xA8, 0x00, 0x1A, 0x13, 0xBE, 0x00, 0x00, 0x23, 0x7D, 0xFE, 0x34, 0x20,
    0xF5, 0x06, 0x19, 0x78, 0x86, 0x23, 0x05, 0x20, 0xFB, 0x86, 0x00, 0x00, 0x3E, 0x01, 0xE0, 0x50
};

typedef struct {
	const char * name;
	byte additionalBytes;
	byte timing;
} Opcode;

static const Opcode gameBoyOpcodes[256] = {
	{ "NOP", 0, 4 },
	{ "LD BC,0x%04X", 2 },
	{ "LD (BC),A", 0 },
	{ "INC BC", 0 },
	{ "INC B", 0 },
	{ "DEC B", 0 },
	{ "LD B,0x%02X", 1 },
	{ "RLCA", 0 },
	{ "LD 0x%04X,SP", 2 },
	{ "ADD HL,BC", 0 },
	{ "LD A,(BC)", 0 },
	{ "DEC BC", 0 },
	{ "INC C", 0 },
	{ "DEC C", 0 },
	{ "LD C,0x%02X", 1 },
	{ "RRCA", 0 },
    
	{ "STOP", 0 },
	{ "LD DE,0x%04X", 2 },
	{ "LD (DE),A", 0 },
	{ "INC DE", 0 },
	{ "INC D", 0 },
	{ "DEC D", 0 },
	{ "LD D,0x%02X", 1 },
	{ "RLA", 0 },
	{ "JR 0x%02X", 1 },
	{ "ADD HL,DE", 0 },
	{ "LD A,(DE)", 0 },
	{ "DEC DE", 0 },
	{ "INC E", 0 },
	{ "DEC E", 0 },
	{ "LD E,0x%02X", 1 },
	{ "RRA", 0 },
    
	{ "JR NZ,0x%02X", 1 },
	{ "LD HL,0x%04X", 2 },
	{ "LD (HLI),A", 0 },
	{ "INC HL", 0 },
	{ "INC H", 0 },
	{ "DEC H", 0 },
	{ "LD H,0x%02X", 1 },
	{ "DAA", 0 },
	{ "JR Z,0x%02X", 1 },
	{ "ADD HL,HL", 0 },
	{ "LD A,(HLI)", 0 },
	{ "DEC HL", 0 },
	{ "INC L", 0 },
	{ "DEC L", 0 },
	{ "LD L,0x%02X", 1 },
	{ "CPL", 0 },
    
	{ "JR NC,0x%02X", 1 },
	{ "LD SP,0x%04X", 2 },
	{ "LD (HLD),A", 0 },
	{ "INC SP", 0 },
	{ "INC (HL)", 0 },
	{ "DEC (HL)", 0 },
	{ "LD (HL),0x%02X", 1 },
	{ "SCF", 0 },
	{ "JR C,0x%02X", 1 },
	{ "ADD HL,SP", 0 },
	{ "LD A,(HLD)", 0 },
	{ "DEC SP", 0 },
	{ "INC A", 0 },
	{ "DEC A", 0 },
	{ "LD A,0x%02X", 1 },
	{ "CCF", 0 },
    
	{ "LD B,B", 0 },
	{ "LD B,C", 0 },
	{ "LD B,D", 0 },
	{ "LD B,E", 0 },
	{ "LD B,H", 0 },
	{ "LD B,L", 0 },
	{ "LD B,(HL)", 0 },
	{ "LD B,A", 0 },
	{ "LD C,B", 0 },
	{ "LD C,C", 0 },
	{ "LD C,D", 0 },
	{ "LD C,E", 0 },
	{ "LD C,H", 0 },
	{ "LD C,L", 0 },
	{ "LD C,(HL)", 0 },
	{ "LD C,A", 0 },
    
	{ "LD D,B", 0 },
	{ "LD D,C", 0 },
	{ "LD D,D", 0 },
	{ "LD D,E", 0 },
	{ "LD D,H", 0 },
	{ "LD D,L", 0 },
	{ "LD D,(HL)", 0 },
	{ "LD D,A", 0 },
	{ "LD E,B", 0 },
	{ "LD E,C", 0 },
	{ "LD E,D", 0 },
	{ "LD E,E", 0 },
	{ "LD E,H", 0 },
	{ "LD E,L", 0 },
	{ "LD E,(HL)", 0 },
	{ "LD E,A", 0 },
    
	{ "LD H,B", 0 },
	{ "LD H,C", 0 },
	{ "LD H,D", 0 },
	{ "LD H,E", 0 },
	{ "LD H,H", 0 },
	{ "LD H,L", 0 },
	{ "LD H,(HL)", 0 },
	{ "LD H,A", 0 },
	{ "LD L,B", 0 },
	{ "LD L,C", 0 },
	{ "LD L,D", 0 },
	{ "LD L,E", 0 },
	{ "LD L,H", 0 },
	{ "LD L,L", 0 },
	{ "LD L,(HL)", 0 },
	{ "LD L,A", 0 },
    
	{ "LD (HL),B", 0 },
	{ "LD (HL),C", 0 },
	{ "LD (HL),D", 0 },
	{ "LD (HL),E", 0 },
	{ "LD (HL),H", 0 },
	{ "LD (HL),L", 0 },
	{ "HALT", 0 },
	{ "LD (HL),A", 0 },
	{ "LD A,B", 0 },
	{ "LD A,C", 0 },
	{ "LD A,D", 0 },
	{ "LD A,E", 0 },
	{ "LD A,H", 0 },
	{ "LD A,L", 0 },
	{ "LD A,(HL)", 0 },
	{ "LD A,A", 0 },
    
	{ "ADD A,B", 0 },
	{ "ADD A,C", 0 },
	{ "ADD A,D", 0 },
	{ "ADD A,E", 0 },
	{ "ADD A,H", 0 },
	{ "ADD A,L", 0 },
	{ "ADD A,(HL)", 0 },
	{ "ADD A,A", 0 },
	{ "ADC A,B", 0 },
	{ "ADC A,C", 0 },
	{ "ADC A,D", 0 },
	{ "ADC A,E", 0 },
	{ "ADC A,H", 0 },
	{ "ADC A,L", 0 },
	{ "ADC A,(HL)", 0 },
	{ "ADC A,A", 0 },
    
	{ "SUB B", 0 },
	{ "SUB C", 0 },
	{ "SUB D", 0 },
	{ "SUB E", 0 },
	{ "SUB H", 0 },
	{ "SUB L", 0 },
	{ "SUB (HL)", 0 },
	{ "SUB A", 0 },
	{ "SBC A,B", 0 },
	{ "SBC A,C", 0 },
	{ "SBC A,D", 0 },
	{ "SBC A,E", 0 },
	{ "SBC A,H", 0 },
	{ "SBC A,L", 0 },
	{ "SBC A,(HL)", 0 },
	{ "SBC A,A", 0 },
    
	{ "AND B", 0 },
	{ "AND C", 0 },
	{ "AND D", 0 },
	{ "AND E", 0 },
	{ "AND H", 0 },
	{ "AND L", 0 },
	{ "AND (HL)", 0 },
	{ "AND A", 0 },
	{ "XOR B", 0 },
	{ "XOR C", 0 },
	{ "XOR D", 0 },
	{ "XOR E", 0 },
	{ "XOR H", 0 },
	{ "XOR L", 0 },
	{ "XOR (HL)", 0 },
	{ "XOR A", 0 },
    
	{ "OR B", 0 },
	{ "OR C", 0 },
	{ "OR D", 0 },
	{ "OR E", 0 },
	{ "OR H", 0 },
	{ "OR L", 0 },
	{ "OR (HL)", 0 },
	{ "OR A", 0 },
	{ "CP B", 0 },
	{ "CP C", 0 },
	{ "CP D", 0 },
	{ "CP E", 0 },
	{ "CP H", 0 },
	{ "CP L", 0 },
	{ "CP (HL)", 0 },
	{ "CP A", 0 },
    
	{ "RET NZ", 0 },
	{ "POP BC", 0 },
	{ "JP NZ,0x%04X", 2 },
	{ "JP 0x%04X", 2 },
	{ "CALL NZ,0x%04X", 2 },
	{ "PUSH BC", 0 },
	{ "ADD A,0x%02X", 1 },
	{ "RST ", 0 },
	{ "RET Z", 0 },
	{ "RET", 0 },
	{ "JP Z,0x%04X", 2 },
	{ "cb opcode", 0 },
	{ "CALL Z,0x%04X", 2 },
	{ "CALL 0x%04X", 2 },
	{ "ADC A,0x%02X", 1 },
	{ "RST 0x08", 0 },
    
	{ "RET NC", 0 },
	{ "POP DE", 0 },
	{ "JP NC,0x%04X", 2 },
	{ "unused opcode", 0 },
	{ "CALL NC,0x%04X", 2 },
	{ "PUSH DE", 0 },
	{ "SUB 0x%02X", 1 },
	{ "RST 0x10", 0 },
	{ "RET C", 0 },
	{ "RETI", 0 },
	{ "JP C,0x%04X", 2 },
	{ "unused opcode", 0 },
	{ "CALL C,0x%04X", 2 },
	{ "unused opcode", 0 },
	{ "SBC A,0x%02X", 1 },
	{ "RST 0x18", 0 },
    
	{ "LD (0xFF00+0x%02X),A", 1 },
	{ "POP HL", 0 },
	{ "LD (0xFF00+C),A", 0 },
	{ "unused opcode", 0 },
	{ "unused opcode", 0 },
	{ "PUSH HL", 0 },
	{ "AND 0x%02X", 1 },
	{ "RST 0x20", 0 },
	{ "ADD SP,0x%02X", 1 },
	{ "JP (HL)", 0 },
	{ "LD 0x%04X,A", 2 },
	{ "unused opcode", 0 },
	{ "unused opcode", 0 },
	{ "unused opcode", 0 },
	{ "XOR 0x%02X", 1 },
	{ "RST 0x28", 0 },
    
	{ "LD A,(0xFF00+0x%02X)", 1 },
	{ "POP AF", 0 },
	{ "LD A,(0xFF00+C)", 0 },
	{ "DI", 0 },
	{ "unused opcode", 0 },
	{ "PUSH AF", 0 },
	{ "OR 0x%02X", 1 },
	{ "RST 0x30", 0 },
	{ "LD HL,SP", 0 },
	{ "LD SP,HL", 0 },
	{ "LD A,0x%04X", 2 },
	{ "EI", 0 },
	{ "unused opcode", 0 },
	{ "unused opcode", 0 },
	{ "CP 0x%02X", 1 },
	{ "RST 0x38", 0 },
};

static const Opcode specialGameBoyOpcodes[256] = {
	{ "RLC B", 0 },
	{ "RLC C", 0 },
	{ "RLC D", 0 },
	{ "RLC E", 0 },
	{ "RLC H", 0 },
	{ "RLC L", 0 },
	{ "RLC (HL)", 0 },
	{ "RLC A", 0 },
	{ "RRC B", 0 },
	{ "RRC C", 0 },
	{ "RRC D", 0 },
	{ "RRC E", 0 },
	{ "RRC H", 0 },
	{ "RRC L", 0 },
	{ "RRC (HL)", 0 },
	{ "RRC A", 0 },
    
	{ "RL B", 0 },
	{ "RL C", 0 },
	{ "RL D", 0 },
	{ "RL E", 0 },
	{ "RL H", 0 },
	{ "RL L ", 0 },
	{ "RL (HL)", 0 },
	{ "RL A", 0 },
	{ "RR B", 0 },
	{ "RR C", 0 },
	{ "RR D", 0 },
	{ "RR E", 0 },
	{ "RR H", 0 },
	{ "RR L", 0 },
	{ "RR (HL)", 0 },
	{ "RR A", 0 },

	{ "SLA B", 0 },
	{ "SLA C", 0 },
	{ "SLA D", 0 },
	{ "SLA E", 0 },
	{ "SLA H", 0 },
	{ "SLA L", 0 },
	{ "SLA (HL)", 0 },
	{ "SLA A", 0 },
	{ "SRA B", 0 },
	{ "SRA C", 0 },
	{ "SRA D", 0 },
	{ "SRA E", 0 },
	{ "SRA H", 0 },
	{ "SRA L", 0 },
	{ "SRA (HL)", 0 },
	{ "SRA A", 0 },
    
	{ "SWAP B", 0 },
	{ "SWAP C", 0 },
	{ "SWAP D", 0 },
	{ "SWAP E", 0 },
	{ "SWAP H", 0 },
	{ "SWAP L", 0 },
	{ "SWAP (HL)", 0 },
	{ "SWAP A", 0 },
	{ "SRL B", 0 },
	{ "SRL C", 0 },
	{ "SRL D", 0 },
	{ "SRL E", 0 },
	{ "SRL H", 0 },
	{ "SRL L", 0 },
	{ "SRL (HL)", 0 },
	{ "SRL A", 0 },
    
	{ "BIT 0 B", 0 },
	{ "BIT 0 C", 0 },
	{ "BIT 0 D", 0 },
	{ "BIT 0 E", 0 },
	{ "BIT 0 H", 0 },
	{ "BIT 0 L", 0 },
	{ "BIT 0 (HL)", 0 },
	{ "BIT 0 A", 0 },
	{ "BIT 1 B", 0 },
	{ "BIT 1 C", 0 },
	{ "BIT 1 D", 0 },
	{ "BIT 1 E", 0 },
	{ "BIT 1 H", 0 },
	{ "BIT 1 L", 0 },
	{ "BIT 1 (HL)", 0 },
	{ "BIT 1 A", 0 },
    
	{ "BIT 2 B", 0 },
	{ "BIT 2 C", 0 },
	{ "BIT 2 D", 0 },
	{ "BIT 2 E", 0 },
	{ "BIT 2 H", 0 },
	{ "BIT 2 L", 0 },
    { "BIT 2 (HL)", 0 },
	{ "BIT 2 A", 0 },
	{ "BIT 3 B", 0 },
	{ "BIT 3 C", 0 },
	{ "BIT 3 D", 0 },
	{ "BIT 3 E", 0 },
	{ "BIT 3 H", 0 },
	{ "BIT 3 L", 0 },
	{ "BIT 3 (HL)", 0 },
	{ "BIT 3 A", 0 },

	{ "BIT 4 B", 0 },
	{ "BIT 4 C", 0 },
	{ "BIT 4 D", 0 },
	{ "BIT 4 E", 0 },
	{ "BIT 4 H", 0 },
	{ "BIT 4 L", 0 },
	{ "BIT 4 (HL)", 0 },
	{ "BIT 4 A", 0 },
	{ "BIT 5 B", 0 },
	{ "BIT 5 C", 0 },
	{ "BIT 5 D", 0 },
	{ "BIT 5 E", 0 },
	{ "BIT 5 H", 0 },
	{ "BIT 5 L", 0 },
	{ "BIT 5 (HL)", 0 },
	{ "BIT 5 A", 0 },
    
	{ "BIT 6 B", 0 },
	{ "BIT 6 C", 0 },
	{ "BIT 6 D", 0 },
	{ "BIT 6 E", 0 },
	{ "BIT 6 H", 0 },
	{ "BIT 6 L", 0 },
	{ "BIT 6 (HL)", 0 },
	{ "BIT 6 A", 0 },
	{ "BIT 7 B", 0 },
	{ "BIT 7 C", 0 },
	{ "BIT 7 D", 0 },
	{ "BIT 7 E", 0 },
	{ "BIT 7 H", 0 },
	{ "BIT 7 L", 0 },
	{ "BIT 7 (HL)", 0 },
	{ "BIT 7 A", 0 },
    
	{ "RES 0 B", 0 },
	{ "RES 0 C", 0 },
	{ "RES 0 D", 0 },
	{ "RES 0 E", 0 },
	{ "RES 0 H", 0 },
	{ "RES 0 L", 0 },
	{ "RES 0 (HL)", 0 },
	{ "RES 0 A", 0 },
	{ "RES 1 B", 0 },
	{ "RES 1 C", 0 },
	{ "RES 1 D", 0 },
	{ "RES 1 E", 0 },
	{ "RES 1 H", 0 },
	{ "RES 1 L", 0 },
	{ "RES 1 (HL)", 0 },
	{ "RES 1 A", 0 },
    
	{ "RES 2 B", 0 },
	{ "RES 2 C", 0 },
	{ "RES 2 D", 0 },
	{ "RES 2 E", 0 },
	{ "RES 2 H", 0 },
	{ "RES 2 L", 0 },
	{ "RES 2 (HL)", 0 },
	{ "RES 2 A", 0 },
	{ "RES 3 B", 0 },
	{ "RES 3 C", 0 },
	{ "RES 3 D", 0 },
	{ "RES 3 E", 0 },
	{ "RES 3 H", 0 },
	{ "RES 3 L", 0 },
	{ "RES 3 (HL)", 0 },
	{ "RES 3 A", 0 },
    
	{ "RES 4 B", 0 },
	{ "RES 4 C", 0 },
	{ "RES 4 D", 0 },
	{ "RES 4 E", 0 },
	{ "RES 4 H", 0 },
	{ "RES 4 L", 0 },
	{ "RES 4 (HL)", 0 },
	{ "RES 4 A", 0 },
	{ "RES 5 B", 0 },
	{ "RES 5 C", 0 },
	{ "RES 5 D", 0 },
	{ "RES 5 E", 0 },
	{ "RES 5 H", 0 },
	{ "RES 5 L", 0 },
	{ "RES 5 (HL)", 0 },
	{ "RES 5 A", 0 },
    
	{ "RES 6 B", 0 },
	{ "RES 6 C", 0 },
	{ "RES 6 D", 0 },
	{ "RES 6 E", 0 },
	{ "RES 6 H", 0 },
	{ "RES 6 L", 0 },
	{ "RES 6 (HL)", 0 },
	{ "RES 6 A", 0 },
	{ "RES 7 B", 0 },
	{ "RES 7 C", 0 },
	{ "RES 7 D", 0 },
	{ "RES 7 E", 0 },
	{ "RES 7 H", 0 },
	{ "RES 7 L", 0 },
	{ "RES 7 (HL)", 0 },
	{ "RES 7 A", 0 },
    
	{ "SET 0 B", 0 },
	{ "SET 0 C", 0 },
	{ "SET 0 D", 0 },
	{ "SET 0 E", 0 },
	{ "SET 0 H", 0 },
	{ "SET 0 L", 0 },
	{ "SET 0 (HL)", 0 },
	{ "SET 0 A", 0 },
	{ "SET 1 B", 0 },
	{ "SET 1 C", 0 },
	{ "SET 1 D", 0 },
	{ "SET 1 E", 0 },
	{ "SET 1 H", 0 },
	{ "SET 1 L", 0 },
	{ "SET 1 (HL)", 0 },
	{ "SET 1 A", 0 },
    
	{ "SET 2 B", 0 },
	{ "SET 2 C", 0 },
	{ "SET 2 D", 0 },
	{ "SET 2 E", 0 },
	{ "SET 2 H", 0 },
	{ "SET 2 L", 0 },
	{ "SET 2 (HL)", 0 },
	{ "SET 2 A", 0 },
	{ "SET 3 B", 0 },
	{ "SET 3 C", 0 },
	{ "SET 3 D", 0 },
	{ "SET 3 E", 0 },
	{ "SET 3 H", 0 },
	{ "SET 3 L", 0 },
	{ "SET 3 (HL)", 0 },
	{ "SET 3 A", 0 },
    
	{ "SET 4 B", 0 },
	{ "SET 4 C", 0 },
	{ "SET 4 D", 0 },
	{ "SET 4 E", 0 },
	{ "SET 4 H", 0 },
	{ "SET 4 L", 0 },
	{ "SET 4 (HL)", 0 },
	{ "SET 4 A", 0 },
	{ "SET 5 B", 0 },
	{ "SET 5 C", 0 },
	{ "SET 5 D", 0 },
	{ "SET 5 E", 0 },
	{ "SET 5 H", 0 },
	{ "SET 5 L", 0 },
	{ "SET 5 (HL)", 0 },
	{ "SET 5 A", 0 },
    
	{ "SET 6 B", 0 },
	{ "SET 6 C", 0 },
	{ "SET 6 D", 0 },
	{ "SET 6 E", 0 },
	{ "SET 6 H", 0 },
	{ "SET 6 L", 0 },
	{ "SET 6 (HL)", 0 },
	{ "SET 6 A", 0 },
	{ "SET 7 B", 0 },
	{ "SET 7 C", 0 },
	{ "SET 7 D", 0 },
	{ "SET 7 E", 0 },
	{ "SET 7 H", 0 },
	{ "SET 7 L", 0 },
	{ "SET 7 (HL)", 0 },
	{ "SET 7 A", 0 },
};

#endif